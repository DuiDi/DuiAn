/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package duian;

import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;


/**
 *
 * @author DydyBook
 */
public final class AppliDuiAn extends javax.swing.JFrame {
    
    
    //Variables globales
    int i = 0           ; //Indice global des tableaux du quiz
    String[] queries    ; //Tableau global des questions
    String[] answers    ; //Tablea global des réponses
    String[][] choices  ; //Tableau global des choix multiples
    String[] help       ; //Tableau global des messages d'aide pour les questions
    String path = "C:\\Users\\edwin\\Documents\\NetBeansProjects\\DuiAn\\DuiAn\\src\\duian\\Regions";//Chemin absolu d'accès aux fichiers, à modifier selon le chemin de l'utilisateur
    String[] regions = new String[4]; //Tableau global des régions
    JButton boutonTemp = new JButton(); //JButton récupérant les informations sur le bouton sur lequel le joueur à cliquer
    Boolean BoutonValiderCliqué;    //Précise si le bouton "Valider" a été cliqué 
    Boolean BoutonQuestionSuivanteCliqué; //Précise si le bouton "Question suivante" a été cliqué 
    private JLabel Background;
	private ImageIcon ImgBackground;
	
    //Création objets
    Carte map = new Carte();
    Joueur gamer = new Joueur();
    Region regionNord = new Region();
    Region regionSud = new Region();
    Region regionOuest = new Region();
    Region regionEst = new Region();
    Categorie cat = new Categorie();
    QCM quiz = new QCM();
    
    /**
     * Creates new form AppliDuiAn
     */
    public AppliDuiAn() {
        initComponents();
		
        Background = new JLabel();
		ImgBackground = new ImageIcon("img\\menu.png");
		Background.setIcon(ImgBackground);
		Background.setBounds(0, 0, 1280, 800);
		this.getContentPane().add(Background);
		
        LabelNomRegion.setText("Bienvenue dans le jeu Dui'An!");//Titre de menu
        
        SetInvisibleHorsQuiz();//Eléments à rendre invisible hors quiz
        
        regions = map.GetRegions();//Récupération des régions
        
        //Assignation valeurs aux régions
        regionNord.SetNom(regions[0]);
        regionSud.SetNom(regions[1]);
        regionEst.SetNom(regions[2]);
        regionOuest.SetNom(regions[3]);
        
        //Assignation des catégories par région
        regionNord.AjoutCategories(map.GetRegionSpec(regions[0]));
        regionSud.AjoutCategories(map.GetRegionSpec(regions[1]));
        regionEst.AjoutCategories(map.GetRegionSpec(regions[2]));
        regionOuest.AjoutCategories(map.GetRegionSpec(regions[3]));
        
        //Assignation des totems à chaque catégorie
        
        //Assignation par catégorie
        regionNord.SetTotemsParCategorie("Tortue");
        regionSud.SetTotemsParCategorie("Phénix");
        regionEst.SetTotemsParCategorie("Dragon");
        regionOuest.SetTotemsParCategorie("Tigre");
		
		
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        PanelReponse = new javax.swing.JPanel();
        LabelReponse = new javax.swing.JLabel();
        LabelResultatReponse = new javax.swing.JLabel();
        LabelNomCategorie = new javax.swing.JLabel();
        BoutonValider = new javax.swing.JButton();
        PanelAide = new javax.swing.JPanel();
        LabelAidePanda = new javax.swing.JLabel();
        BoutonIndice = new javax.swing.JButton();
        PanelQuestion = new javax.swing.JPanel();
        LabelQuestion = new javax.swing.JLabel();
        ListeChoix = new javax.swing.JList<>();
        BoutonNextQuestion = new javax.swing.JButton();
        LabelNomRegion = new javax.swing.JLabel();
        BoutonNord = new javax.swing.JButton();
        BoutonOuest = new javax.swing.JButton();
        BoutonSud = new javax.swing.JButton();
        BoutonEst = new javax.swing.JButton();
        BoutonValiderCategorie = new javax.swing.JButton();
        BoutonRevenirRegion = new javax.swing.JButton();
        BoutonQuitter = new javax.swing.JButton();
        ScrollCategorie = new javax.swing.JScrollPane();
        ListeCategories = new javax.swing.JList<>();
        LabelListeCategories = new javax.swing.JLabel();
        ScrollTotems = new javax.swing.JScrollPane();
        ListeTotems = new javax.swing.JList<>();
        LabelTotem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 102));

        jPanel7.setBackground(new java.awt.Color(255, 255, 102));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 153));

        jPanel1.setBackground(new java.awt.Color(153, 255, 51));

        PanelReponse.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        LabelReponse.setBackground(new java.awt.Color(0, 255, 204));
        LabelReponse.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        LabelReponse.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelReponse.setText("Réponse");

        javax.swing.GroupLayout PanelReponseLayout = new javax.swing.GroupLayout(PanelReponse);
        PanelReponse.setLayout(PanelReponseLayout);
        PanelReponseLayout.setHorizontalGroup(
            PanelReponseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelReponseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelReponseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelReponse, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                    .addComponent(LabelResultatReponse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        PanelReponseLayout.setVerticalGroup(
            PanelReponseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelReponseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelResultatReponse, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LabelReponse, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        LabelNomCategorie.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        LabelNomCategorie.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelNomCategorie.setText("Catégorie");
        LabelNomCategorie.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        BoutonValider.setText("Valider");
        BoutonValider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonValiderActionPerformed(evt);
            }
        });

        PanelAide.setBackground(new java.awt.Color(255, 204, 204));

        LabelAidePanda.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        LabelAidePanda.setAutoscrolls(true);
        LabelAidePanda.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout PanelAideLayout = new javax.swing.GroupLayout(PanelAide);
        PanelAide.setLayout(PanelAideLayout);
        PanelAideLayout.setHorizontalGroup(
            PanelAideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAideLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelAidePanda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelAideLayout.setVerticalGroup(
            PanelAideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAideLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(LabelAidePanda, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                .addContainerGap())
        );

        BoutonIndice.setText("Un indice ?");
        BoutonIndice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonIndiceActionPerformed(evt);
            }
        });

        PanelQuestion.setBackground(new java.awt.Color(255, 153, 102));

        LabelQuestion.setBackground(new java.awt.Color(255, 153, 153));
        LabelQuestion.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        LabelQuestion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelQuestion.setAutoscrolls(true);

        javax.swing.GroupLayout PanelQuestionLayout = new javax.swing.GroupLayout(PanelQuestion);
        PanelQuestion.setLayout(PanelQuestionLayout);
        PanelQuestionLayout.setHorizontalGroup(
            PanelQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelQuestionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelQuestionLayout.setVerticalGroup(
            PanelQuestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelQuestionLayout.createSequentialGroup()
                .addComponent(LabelQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        BoutonNextQuestion.setText("Question suivante");
        BoutonNextQuestion.setName(""); // NOI18N
        BoutonNextQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonNextQuestionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(BoutonValider)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(LabelNomCategorie, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(PanelQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(ListeChoix, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PanelAide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(PanelReponse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(BoutonIndice, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BoutonNextQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(BoutonValider)
                .addGap(12, 12, 12))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(PanelAide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BoutonIndice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PanelReponse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelNomCategorie, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BoutonNextQuestion))
                        .addGap(18, 18, 18)
                        .addComponent(PanelQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ListeChoix, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quiz", jPanel1);

        LabelNomRegion.setFont(new java.awt.Font("Lucida Grande", 1, 20)); // NOI18N
        LabelNomRegion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelNomRegion.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(153, 153, 153))); // NOI18N

        BoutonNord.setActionCommand("Langue");
        BoutonNord.setLabel("Langue");
        BoutonNord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonNordActionPerformed(evt);
            }
        });

        BoutonOuest.setLabel("Culture pop moderne");
        BoutonOuest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonOuestActionPerformed(evt);
            }
        });

        BoutonSud.setText("Histoire et Géographie");
        BoutonSud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonSudActionPerformed(evt);
            }
        });

        BoutonEst.setText("Us et Coutumes");
        BoutonEst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonEstActionPerformed(evt);
            }
        });

        BoutonValiderCategorie.setText("Valider");
        BoutonValiderCategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonValiderCategorieActionPerformed(evt);
            }
        });

        BoutonRevenirRegion.setText("Revenir au menu");
        BoutonRevenirRegion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonRevenirRegionActionPerformed(evt);
            }
        });

        BoutonQuitter.setText("Quitter");
        BoutonQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonQuitterActionPerformed(evt);
            }
        });

        ListeCategories.setBackground(new java.awt.Color(204, 204, 255));
        ScrollCategorie.setViewportView(ListeCategories);

        LabelListeCategories.setBackground(new java.awt.Color(153, 153, 255));
        LabelListeCategories.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        LabelListeCategories.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelListeCategories.setText("Catégories dédiées");

        ListeTotems.setBackground(new java.awt.Color(204, 255, 204));
        ScrollTotems.setViewportView(ListeTotems);

        LabelTotem.setBackground(new java.awt.Color(204, 255, 204));
        LabelTotem.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        LabelTotem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelTotem.setText("Totems");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(BoutonRevenirRegion)
                        .addGap(102, 102, 102)
                        .addComponent(LabelNomRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BoutonQuitter))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(BoutonNord)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BoutonSud)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BoutonEst)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BoutonOuest)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ScrollCategorie, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                                    .addComponent(LabelListeCategories, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                    .addGap(29, 29, 29)
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(LabelTotem, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(BoutonValiderCategorie))
                                    .addGap(53, 53, 53)))
                            .addComponent(ScrollTotems, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane1)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BoutonRevenirRegion)
                            .addComponent(BoutonQuitter)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(LabelNomRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BoutonNord)
                    .addComponent(BoutonSud)
                    .addComponent(BoutonEst)
                    .addComponent(BoutonOuest))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LabelListeCategories)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ScrollCategorie, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BoutonValiderCategorie)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(LabelTotem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ScrollTotems, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane1))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Permet de revenir au menu des régions
    private void BoutonRevenirRegionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonRevenirRegionActionPerformed
        SetInvisibleHorsQuiz();//Eléménts rendus invisibles

        SetBoutonsRegionsVisibles();
    }//GEN-LAST:event_BoutonRevenirRegionActionPerformed

    //Permet de débuter le jeu ou de passer à la question suivante
    private void BoutonNextQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonNextQuestionActionPerformed

        SetBoutonsRegionsInvisibles();
        
        BoutonNextQuestion.setText("Question suivante");

        LabelNomCategorie.setText(cat.GetNom());
        LabelQuestion.setText(queries[i]);

        LabelReponse.setText(answers[i]);
        LabelAidePanda.setText(help[i]);
        
        LabelAidePanda.setVisible(false);
        PanelAide.setVisible(false);
        
        CreerItemChoix();

        i++;
    }//GEN-LAST:event_BoutonNextQuestionActionPerformed

    //Permet de rentrer dans les catégories de la région Us & Coutumes
    private void BoutonEstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonEstActionPerformed
        SetVisibleQuiz();//Affichage des éléments nécessaires au quiz

        SetBoutonsRegionsInvisibles();

        //Récupération informations par région
        LabelNomRegion.setText(BoutonEst.getText());
        ListeCategories.setListData(map.GetRegionSpec(BoutonEst.getText()));
        ListeCategories.setVisible(true);
        
        //On récupère le bouton cliqué
        boutonTemp = BoutonEst;
        
        //Affichage animaux totems de la région
        ListeTotems.setListData(regionEst.GetTotems());
        
        //Affichage des éléments liés aux informations totem
        ScrollTotems.setVisible(true);
        ListeTotems.setVisible(true);
        LabelTotem.setVisible(true);
    }//GEN-LAST:event_BoutonEstActionPerformed

    //Permet de rentrer dans les catégories de la région Histoire & Géographie
    private void BoutonSudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonSudActionPerformed
        SetVisibleQuiz();//Affichage des éléments nécessaires au quiz
        
        SetBoutonsRegionsInvisibles();

        //Récupération informations par région
        LabelNomRegion.setText(regionSud.GetNom());
        ListeCategories.setListData(map.GetRegionSpec(BoutonSud.getText()));
        ListeCategories.setVisible(true);
       
        //On récupère le bouton cliqué
        boutonTemp = BoutonOuest;
        
        //Affichage animaux totems de la région
        ListeTotems.setListData(regionSud.GetTotems());
        
        //Affichage des éléments liés aux informations totem
        ScrollTotems.setVisible(true);
        ListeTotems.setVisible(true);
        LabelTotem.setVisible(true);
    }//GEN-LAST:event_BoutonSudActionPerformed

    //Permet de rentrer dans les catégories de la région Culture pop moderne
    private void BoutonOuestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonOuestActionPerformed
        SetVisibleQuiz();//Affichage des éléments nécessaires au quiz

        SetBoutonsRegionsInvisibles();

        //Récupération informations par région
        LabelNomRegion.setText(BoutonOuest.getText());
        ListeCategories.setListData(map.GetRegionSpec(BoutonOuest.getText()));
        ListeCategories.setVisible(true);
        
        //On récupère le bouton cliqué
        boutonTemp = BoutonOuest;
        
        //Affichage animaux totems de la région
        ListeTotems.setListData(regionOuest.GetTotems());
        
        //Affichage des éléments liés aux informations totem
        ScrollTotems.setVisible(true);
        ListeTotems.setVisible(true);
        LabelTotem.setVisible(true);
    }//GEN-LAST:event_BoutonOuestActionPerformed

    //Permet de rentrer dans les catégories de la région Langue
    private void BoutonNordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonNordActionPerformed
        SetVisibleQuiz();//Affichage des éléments nécessaires au quiz

        SetBoutonsRegionsInvisibles(); 

        //Récupération informations par région
        LabelNomRegion.setText(BoutonNord.getText());
        ListeCategories.setListData(map.GetRegionSpec(BoutonNord.getText()));
        ListeCategories.setVisible(true);
        
        //On récupère le bouton cliqué
        boutonTemp = BoutonNord;
        
        //Affichage animaux totems de la région
        ListeTotems.setListData(regionNord.GetTotems());
        
        //Affichage des éléments liés aux informations totem
        ScrollTotems.setVisible(true);
        ListeTotems.setVisible(true);
        LabelTotem.setVisible(true);
    }//GEN-LAST:event_BoutonNordActionPerformed

    //Permet d'afficher une case contenant un indice pour la question du quiz
    private void BoutonIndiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonIndiceActionPerformed
        //Eléments rendus visibles
        PanelAide.setVisible(true);
        LabelAidePanda.setVisible(true);
    }//GEN-LAST:event_BoutonIndiceActionPerformed

    //Permet de valider la catégorie une fois dans une région
    private void BoutonValiderCategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonValiderCategorieActionPerformed
        
        //Obtenir le quizz
        GetQuiz();
        
        //Afficher le totem à obtenir
        LabelListeCategories.setText("Obtenez le "+cat.GetAnimal().toString());
        
    }//GEN-LAST:event_BoutonValiderCategorieActionPerformed

    //Permet de quitter l'application
    private void BoutonQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonQuitterActionPerformed
        System.exit(0);
    }//GEN-LAST:event_BoutonQuitterActionPerformed

    private void BoutonValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonValiderActionPerformed
        AfficheResultat();//Affiche le résultat
    }//GEN-LAST:event_BoutonValiderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppliDuiAn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppliDuiAn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppliDuiAn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppliDuiAn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new AppliDuiAn().setVisible(true);
            }
        });
    }
    
    //Permet de créer des boutons de choix
    public void CreerItemChoix(){
        ListeChoix.setListData(choices[i]);
    }
    
    //Permet de récupérer le quiz correspondant à la catégorie
    public void GetQuiz(){
        i = 0;
        //On récupère la catégorie sélectionnée
        cat.SetNom(ListeCategories.getSelectedValue());
        cat.SetPath(path+boutonTemp.getText()+"/"+cat.GetNom());
        quiz.SetQCM(cat.GetPath());
        
        //Récupération des éléments du quiz
        queries = quiz.GetQuestions();
        answers = quiz.GetReponses();
        choices = quiz.GetChoix();
        help = quiz.GetAides();
        
        LabelNomCategorie.setText(cat.GetNom());
        LabelQuestion.setText(queries[i]);

        LabelReponse.setText(answers[i]);
        LabelAidePanda.setText(help[i]);
        
        LabelAidePanda.setVisible(false);
        PanelAide.setVisible(false);
        CreerItemChoix();
    }
    
    //Permet de rendre invisible certains éléments au menu
    public void SetInvisibleHorsQuiz(){
        PanelAide.setVisible(false);
        LabelAidePanda.setVisible(false);
        BoutonIndice.setVisible(false);
        jTabbedPane1.setVisible(false);
        ListeCategories.setVisible(false);
        LabelListeCategories.setVisible(false);
        ListeTotems.setVisible(false);
        LabelNomCategorie.setVisible(false);
        LabelReponse.setVisible(false);
        PanelReponse.setVisible(false);
        BoutonNextQuestion.setVisible(false);
        BoutonRevenirRegion.setVisible(false);
        BoutonValiderCategorie.setVisible(false);
        PanelReponse.setVisible(false);
        LabelQuestion.setVisible(false);
        PanelQuestion.setVisible(false);
        LabelResultatReponse.setVisible(false);
        ScrollCategorie.setVisible(false);
        ScrollTotems.setVisible(false);
        ListeTotems.setVisible(false);
        LabelTotem.setVisible(false);
    }
    
    //Permet de rendre visible certains éléments au quiz
    public void SetVisibleQuiz(){
        BoutonIndice.setVisible(true);
        jTabbedPane1.setVisible(true);
        ListeCategories.setVisible(true);
        LabelListeCategories.setVisible(true);
        LabelNomCategorie.setVisible(true);
        BoutonNextQuestion.setVisible(true);
        BoutonRevenirRegion.setVisible(true);
        BoutonValiderCategorie.setVisible(true);
        LabelQuestion.setVisible(true);
        PanelQuestion.setVisible(true);
        ScrollCategorie.setVisible(true);
    }
    
    //Permet de rendre invisible les boutons des régions
    public void SetBoutonsRegionsInvisibles(){
        BoutonNord.setVisible(false);
        BoutonSud.setVisible(false);
        BoutonOuest.setVisible(false);
        BoutonEst.setVisible(false);
    }
    
    //Permet de rendre visible les boutons des régions
    public void SetBoutonsRegionsVisibles(){
        BoutonNord.setVisible(true);
        BoutonSud.setVisible(true);
        BoutonOuest.setVisible(true);
        BoutonEst.setVisible(true);
        
        LabelNomRegion.setText("Les régions de Chine");//Titre des régions
    }
    
    //Permet d'afficher le résultat
    public void AfficheResultat(){
        //Variables locales
        String repJoueur = ListeChoix.getSelectedValue();
        
        //Affichage d'éléments
        PanelReponse.setVisible(true);
        
        BoutonValiderCliqué = true;
        
        //Si l'indice est inférieur au nombre d'éléments dans les tableaux de quiz
        if (i < 5){
            //Vérification du résultat
            if (repJoueur.compareTo(LabelReponse.getText()) == 0)
            {
                LabelResultatReponse.setForeground(Color.GREEN);
                LabelResultatReponse.setText("Correct !");
                quiz.SetBonnesreponses(quiz.GetBonnesReponses()+1);
            }
            else
            {
                LabelResultatReponse.setForeground(Color.red);
                LabelResultatReponse.setText("Faux !");
            }
            LabelReponse.setVisible(true);
            LabelResultatReponse.setVisible(true);
        }
        else{
              //JOptionPane.showMessageDialog(this, "Bien joué ! Vous avez obtenu :\n"+this.animal.toString(), "Excellent !", 0);
   
        }
        
    }
    
    //Permet d'afficher des informations selon la région
    public void AffichageSelonRegion(){
        if(boutonTemp.getText().compareTo(regionNord.GetNom()) == 0){
            ListeTotems.setListData(regionNord.GetTotems());
        }
        else if(boutonTemp.getText().compareTo(regionSud.GetNom()) == 0){
            ListeTotems.setListData(regionSud.GetTotems());
        }
        else if(boutonTemp.getText().compareTo(regionOuest.GetNom()) == 0){
            ListeTotems.setListData(regionOuest.GetTotems());
        }
        else if(boutonTemp.getText().compareTo(regionEst.GetNom()) == 0){
            ListeTotems.setListData(regionEst.GetTotems());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BoutonEst;
    private javax.swing.JButton BoutonIndice;
    private javax.swing.JButton BoutonNextQuestion;
    private javax.swing.JButton BoutonNord;
    private javax.swing.JButton BoutonOuest;
    private javax.swing.JButton BoutonQuitter;
    private javax.swing.JButton BoutonRevenirRegion;
    private javax.swing.JButton BoutonSud;
    private javax.swing.JButton BoutonValider;
    private javax.swing.JButton BoutonValiderCategorie;
    private javax.swing.JLabel LabelAidePanda;
    private javax.swing.JLabel LabelListeCategories;
    private javax.swing.JLabel LabelNomCategorie;
    private javax.swing.JLabel LabelNomRegion;
    private javax.swing.JLabel LabelQuestion;
    private javax.swing.JLabel LabelReponse;
    private javax.swing.JLabel LabelResultatReponse;
    private javax.swing.JLabel LabelTotem;
    private javax.swing.JList<String> ListeCategories;
    private javax.swing.JList<String> ListeChoix;
    private javax.swing.JList<String> ListeTotems;
    private javax.swing.JPanel PanelAide;
    private javax.swing.JPanel PanelQuestion;
    private javax.swing.JPanel PanelReponse;
    private javax.swing.JScrollPane ScrollCategorie;
    private javax.swing.JScrollPane ScrollTotems;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
